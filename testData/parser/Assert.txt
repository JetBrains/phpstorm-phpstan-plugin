<?php

/**
 * @phpstan-assert string[] $arr
 * @phpstan-assert-if-false B $a
 * @phpstan-assert-if-true A $b
 */
function a(array $arr, array $arg) : void {

}

class B {
  function test() {

  }
}

class a {
  public int $b = 0;

  /**
   * @phpstan-if-this-is a<int>
   * @phpstan-assert-if-false int $this->test()
   * @phpstan-assert-if-false int $b->test()
   * @phpstan-assert-if-true null $this->b
    * @template NewT
    * @phpstan-this-out self<NewT>
    * @phpstan-self-out self<NewT>
   */
  public function test(B|A $b): void {

  }
}
---
PHP file
  PsiElement(Non Lazy Group statement)
    PsiElement(php opening tag)('<?php')
    PsiWhiteSpace('\n\n')
    PhpDocCommentImpl
      PsiElement(DOC_COMMENT_START)('/**')
      PsiWhiteSpace('\n ')
      PsiElement(DOC_LEADING_ASTERISK)('*')
      PsiWhiteSpace(' ')
      PhpDocTagImpl: @phpstan-assert
        PsiElement(DOC_TAG_NAME)('@phpstan-assert')
        PsiWhiteSpace(' ')
        PhpDocTypeImpl: string
          PsiElement(DOC_IDENTIFIER)('string')
          PsiElement(DOC_LBRACKET)('[')
          PsiElement(DOC_RBRACKET)(']')
        PsiWhiteSpace(' ')
        PhpDocVarImpl: arr
          PsiElement(DOC_VARIABLE)('$arr')
        PhpPsiElementImpl
          <empty list>
      PsiWhiteSpace('\n ')
      PsiElement(DOC_LEADING_ASTERISK)('*')
      PsiWhiteSpace(' ')
      PhpDocTagImpl: @phpstan-assert-if-false
        PsiElement(DOC_TAG_NAME)('@phpstan-assert-if-false')
        PsiWhiteSpace(' ')
        PhpDocTypeImpl: B
          PsiElement(DOC_IDENTIFIER)('B')
        PsiWhiteSpace(' ')
        PhpDocVarImpl: a
          PsiElement(DOC_VARIABLE)('$a')
        PhpPsiElementImpl
          <empty list>
      PsiWhiteSpace('\n ')
      PsiElement(DOC_LEADING_ASTERISK)('*')
      PsiWhiteSpace(' ')
      PhpDocTagImpl: @phpstan-assert-if-true
        PsiElement(DOC_TAG_NAME)('@phpstan-assert-if-true')
        PsiWhiteSpace(' ')
        PhpDocTypeImpl: A
          PsiElement(DOC_IDENTIFIER)('A')
        PsiWhiteSpace(' ')
        PhpDocVarImpl: b
          PsiElement(DOC_VARIABLE)('$b')
        PhpPsiElementImpl
          <empty list>
      PsiWhiteSpace('\n ')
      PsiElement(DOC_COMMENT_END)('*/')
    PsiWhiteSpace('\n')
    FunctionImpl: a
      PsiElement(function)('function')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('a')
      PsiElement(()('(')
      Parameter list
        ParameterImpl: arr
          Parameter type
            ClassReferenceImpl: array
              PsiElement(array)('array')
          PsiWhiteSpace(' ')
          PsiElement(variable)('$arr')
        PsiElement(comma)(',')
        PsiWhiteSpace(' ')
        ParameterImpl: arg
          Parameter type
            ClassReferenceImpl: array
              PsiElement(array)('array')
          PsiWhiteSpace(' ')
          PsiElement(variable)('$arg')
      PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement(colon)(':')
      PsiWhiteSpace(' ')
      Return type
        ClassReferenceImpl: void
          PsiElement(identifier)('void')
      PsiWhiteSpace(' ')
      PsiElement(Group statement)
        PsiElement({)('{')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    PhpClass: B
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('B')
      PsiWhiteSpace(' ')
      Extends list
        <empty list>
      Implements list
        <empty list>
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      MethodImpl: test
        PhpModifierListImpl: %EMPTY%
          <empty list>
        PsiElement(function)('function')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('test')
        PsiElement(()('(')
        Parameter list
          <empty list>
        PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(Group statement)
          PsiElement({)('{')
          PsiWhiteSpace('\n\n  ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    PhpClass: a
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('a')
      PsiWhiteSpace(' ')
      Extends list
        <empty list>
      Implements list
        <empty list>
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      PhpPsiElementImpl
        PhpModifierListImpl: public
          PsiElement(public keyword)('public')
        PsiWhiteSpace(' ')
        Field type
          ClassReferenceImpl: int
            PsiElement(identifier)('int')
        PsiWhiteSpace(' ')
        FieldImpl: b
          PsiElement(variable)('$b')
          PsiWhiteSpace(' ')
          PsiElement(assign)('=')
          PsiWhiteSpace(' ')
          PhpExpressionImpl: 0
            PsiElement(integer)('0')
        PsiElement(semicolon)(';')
      PsiWhiteSpace('\n\n  ')
      PhpDocCommentImpl
        PsiElement(DOC_COMMENT_START)('/**')
        PsiWhiteSpace('\n   ')
        PsiElement(DOC_LEADING_ASTERISK)('*')
        PsiWhiteSpace(' ')
        PhpDocTagImpl: @phpstan-if-this-is
          PsiElement(DOC_TAG_NAME)('@phpstan-if-this-is')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: a
            PsiElement(DOC_IDENTIFIER)('a')
            PhpPsiElementImpl
              PsiElement(DOC_LAB)('<')
              PhpDocTypeImpl: int
                PsiElement(DOC_IDENTIFIER)('int')
              PsiElement(DOC_RAB)('>')
          PhpPsiElementImpl
            <empty list>
        PsiWhiteSpace('\n   ')
        PsiElement(DOC_LEADING_ASTERISK)('*')
        PsiWhiteSpace(' ')
        PhpDocTagImpl: @phpstan-assert-if-false
          PsiElement(DOC_TAG_NAME)('@phpstan-assert-if-false')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: int
            PsiElement(DOC_IDENTIFIER)('int')
          PsiWhiteSpace(' ')
          PhpDocRefImpl: test
            PhpDocVarImpl: this
              PsiElement(DOC_VARIABLE)('$this')
            PsiElement(DOC_ARROW)('->')
            PsiElement(DOC_IDENTIFIER)('test')
            PsiElement(DOC_LPAREN)('(')
            PsiElement(DOC_RPAREN)(')')
          PhpPsiElementImpl
            <empty list>
        PsiWhiteSpace('\n   ')
        PsiElement(DOC_LEADING_ASTERISK)('*')
        PsiWhiteSpace(' ')
        PhpDocTagImpl: @phpstan-assert-if-false
          PsiElement(DOC_TAG_NAME)('@phpstan-assert-if-false')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: int
            PsiElement(DOC_IDENTIFIER)('int')
          PsiWhiteSpace(' ')
          PhpDocRefImpl: test
            PhpDocVarImpl: b
              PsiElement(DOC_VARIABLE)('$b')
            PsiElement(DOC_ARROW)('->')
            PsiElement(DOC_IDENTIFIER)('test')
            PsiElement(DOC_LPAREN)('(')
            PsiElement(DOC_RPAREN)(')')
          PhpPsiElementImpl
            <empty list>
        PsiWhiteSpace('\n   ')
        PsiElement(DOC_LEADING_ASTERISK)('*')
        PsiWhiteSpace(' ')
        PhpDocTagImpl: @phpstan-assert-if-true
          PsiElement(DOC_TAG_NAME)('@phpstan-assert-if-true')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: null
            PsiElement(DOC_IDENTIFIER)('null')
          PsiWhiteSpace(' ')
          PhpDocRefImpl: b
            PhpDocVarImpl: this
              PsiElement(DOC_VARIABLE)('$this')
            PsiElement(DOC_ARROW)('->')
            PsiElement(DOC_IDENTIFIER)('b')
          PhpPsiElementImpl
            <empty list>
        PsiWhiteSpace('\n    ')
        PsiElement(DOC_LEADING_ASTERISK)('*')
        PsiWhiteSpace(' ')
        PhpDocTagImpl: @template
          PsiElement(DOC_TAG_NAME)('@template')
          PsiWhiteSpace(' ')
          PhpDocTemplateParameterImpl: NewT
            PsiElement(DOC_IDENTIFIER)('NewT')
          PhpPsiElementImpl
            <empty list>
        PsiWhiteSpace('\n    ')
        PsiElement(DOC_LEADING_ASTERISK)('*')
        PsiWhiteSpace(' ')
        PhpDocTagImpl: @phpstan-this-out
          PsiElement(DOC_TAG_NAME)('@phpstan-this-out')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: self
            PsiElement(DOC_IDENTIFIER)('self')
            PhpPsiElementImpl
              PsiElement(DOC_LAB)('<')
              PhpDocTypeImpl: NewT
                PsiElement(DOC_IDENTIFIER)('NewT')
              PsiElement(DOC_RAB)('>')
          PhpPsiElementImpl
            <empty list>
        PsiWhiteSpace('\n    ')
        PsiElement(DOC_LEADING_ASTERISK)('*')
        PsiWhiteSpace(' ')
        PhpDocTagImpl: @phpstan-self-out
          PsiElement(DOC_TAG_NAME)('@phpstan-self-out')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: self
            PsiElement(DOC_IDENTIFIER)('self')
            PhpPsiElementImpl
              PsiElement(DOC_LAB)('<')
              PhpDocTypeImpl: NewT
                PsiElement(DOC_IDENTIFIER)('NewT')
              PsiElement(DOC_RAB)('>')
          PhpPsiElementImpl
            <empty list>
        PsiWhiteSpace('\n   ')
        PsiElement(DOC_COMMENT_END)('*/')
      PsiWhiteSpace('\n  ')
      MethodImpl: test
        PhpModifierListImpl: public
          PsiElement(public keyword)('public')
        PsiWhiteSpace(' ')
        PsiElement(function)('function')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('test')
        PsiElement(()('(')
        Parameter list
          ParameterImpl: b
            Parameter type
              ClassReferenceImpl: B
                PsiElement(identifier)('B')
              PsiElement(bit or)('|')
              ClassReferenceImpl: A
                PsiElement(identifier)('A')
            PsiWhiteSpace(' ')
            PsiElement(variable)('$b')
        PsiElement())(')')
        PsiElement(colon)(':')
        PsiWhiteSpace(' ')
        Return type
          ClassReferenceImpl: void
            PsiElement(identifier)('void')
        PsiWhiteSpace(' ')
        PsiElement(Group statement)
          PsiElement({)('{')
          PsiWhiteSpace('\n\n  ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')